= nested_form_for @gist do |f|
  - if @gist.errors.any?
    #error_explanation
      h2 = "#{pluralize(@gist.errors.count, "error")} prohibited this gist from being saved:"
      ul
        - @gist.errors.full_messages.each do |message|
          li = message

  .field
    = f.text_field :description, placeholder: 'Gist Description', class: 'initial-focus'
  #gist_files
    = f.fields_for :gist_files do |gist_file_fields|
      .gist_file
        .editor-container
          .editor-meta
            span.editor-header-name
              = gist_file_fields.text_field :file_name, placeholder: "File Name"
            span.editor-header-type
              = gist_file_fields.select :file_type, %i(markdown ruby javascript sh json coffee html css)
            span.editor-header-actions
              = gist_file_fields.link_to_remove fa_icon(:times), title: 'Delete File'
          = gist_file_fields.text_area :body, class: :editor, :'data-ace-lang' => "#{gist_file_fields.object.file_type}"
    = f.link_to_add "#{fa_icon("plus")} Add File".html_safe, :gist_files, class: :button
  br
  .actions
    ul
      li
        button#gist_save type="submit"
          => fa_icon 'save'
          | Save
      li
        = link_to "#{fa_icon("trash-o")} Delete".html_safe, @gist, data: {:confirm => 'Are you sure?'}, :method => :delete, class: "button danger"

coffee:
  document.body.addEventListener "DOMNodeInserted", ((event) ->
    elementJustAdded = jQuery(event.target)
    if elementJustAdded.hasClass("fields")
      jQuery(".editor").ace
        lang: "markdown"
        indent: 2
        width: "100%"
        theme: "github"

      jQuery(event.srcElement).find(".editor-meta select").change (ev) ->
        ace = undefined
        ace = jQuery(ev.target).closest(".editor-container").find(".editor").data("ace")
        ace.editor.ace.getSession().setMode "ace/mode/" + ev.target.value

    return
  ), false
